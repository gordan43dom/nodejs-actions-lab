name: Node.js CI
on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x] # We'll test on two Node.js versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
  build:
    runs-on: ubuntu-latest
    needs: test
    # This job ONLY runs for pushes to the main branch, not for pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - name: Install dependencies
      run: npm ci
    - name: Build and zip the package
      id: build_step
      run: |
        # This command runs your build
        npm run build
        echo "build_path=dist" >> $GITHUB_OUTPUT
     # Add this step to check for the file
    - name: Verify package exists
      run: test -f ${{ steps.build_step.outputs.build_path }}
    - name: Upload the package
      uses: actions/upload-artifact@v4
      with:
        name: node-app-package  
        path: ${{ steps.build_step.outputs.build_path }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: 
      name: production
      url: https://example.com
    steps:
    - name: Download the package
      uses: actions/download-artifact@v4
      with:
        name: node-app-package
    - name: "Simulate deployment"
      run: |
        echo "Deployed to production"
        ls -la
        echo "Deployment successfull"
